version: '3'
services:

  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./auth/.env
    ports:
      - 3000:3000
    networks:
      - mynetwork
    depends_on:
      - auth-db
      - kafka

  auth-db:
    image: postgres
    restart: always
    env_file:
      - ./auth/.env
    volumes:
      - ./auth/data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - mynetwork

  tasktracker:
    build:
      context: ./tasktracker
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./tasktracker/.env
    ports:
      - 4000:4000
    networks:
      - mynetwork
    depends_on:
      - tasktracker-db
      - kafka
    
  tasktracker-db:
    image: postgres
    restart: always
    env_file:
      - ./tasktracker/.env
    volumes:
      - ./tasktracker/data:/var/lib/postgresql/data
    ports:
      - 5433:5432 
    networks:
      - mynetwork

  kafka:
    image: bitnami/kafka:latest
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    networks:
      - mynetwork
    
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports: 
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - mynetwork
    depends_on:
      - kafka

networks:
  mynetwork:
    driver: bridge
